// Generated by Dagger (https://dagger.dev).
package com.ddd.pollpoll.network.di;

import com.ddd.pollpoll.network.api.DustAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideFindDustServiceFactory implements Factory<DustAPI> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideFindDustServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public DustAPI get() {
    return provideFindDustService(retrofitProvider.get());
  }

  public static NetworkModule_ProvideFindDustServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideFindDustServiceFactory(retrofitProvider);
  }

  public static DustAPI provideFindDustService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideFindDustService(retrofit));
  }
}
